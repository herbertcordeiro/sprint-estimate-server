generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum StoryStatus {
  ACTIVE
  COMPLETED
}

model User {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  name      String   @db.VarChar(255)
  role      UserRole @default(USER)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)

  @@map("users")
}

model Room {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  inviteId  String   @unique @default(uuid())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
  stories   Story[]

  @@map("rooms")
}

model Story {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  estimate    String
  description String      @db.VarChar(255)
  status      StoryStatus @default(ACTIVE)
  createdAt   DateTime    @default(now()) @db.Timestamp(0)
  updatedAt   DateTime    @default(now()) @db.Timestamp(0)
  votes       Vote[]
  room        Room?       @relation(fields: [roomId], references: [id])
  roomId      Int?        @db.UnsignedInt

  @@map("stories")
}

model Vote {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  userId    Int?     @db.UnsignedInt
  value     String
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
  story     Story?   @relation(fields: [storyId], references: [id])
  storyId   Int?     @db.UnsignedInt

  @@map("votes")
}
